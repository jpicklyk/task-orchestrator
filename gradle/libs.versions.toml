[versions]
# Kotlin and Coroutines
kotlin = "2.1.20"
kotlinCoroutines = "1.8.0"
kotlinSerialization = "1.8.0"

# MCP SDK
mcpSdk = "0.5.0"

# Database
sqlite = "3.45.1.0"
exposed = "1.0.0-beta-2"
flyway = "10.22.0"

# Logging
slf4j = "2.0.17"
slf4jNop = "2.0.13"

logback = "1.5.13"

# Testing
mockk = "1.14.2"
junit = "5.10.2"

[libraries]
# Kotlin and Coroutines
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }

# MCP SDK
mcp-sdk = { module = "io.modelcontextprotocol:kotlin-sdk", version.ref = "mcpSdk" }

# Database
sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-migration = { module = "org.jetbrains.exposed:exposed-migration", version.ref = "exposed" }

# Flyway
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }

# Logging
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4jNop" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Testing
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }