name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate version consistency
      if: github.ref_type == 'tag'
      run: |
        # Extract version from build.gradle.kts
        GRADLE_VERSION=$(grep -E '^val (majorVersion|minorVersion|patchVersion)' build.gradle.kts | \
          sed 's/.*= "\(.*\)"/\1/' | paste -sd '.' -)
        
        # Extract tag version (remove 'v' prefix)
        TAG_VERSION=${GITHUB_REF_NAME#v}
        
        echo "Gradle version: $GRADLE_VERSION"
        echo "Git tag version: $TAG_VERSION"
        
        if [ "$GRADLE_VERSION" != "$TAG_VERSION" ]; then
          echo "ERROR: Version mismatch! Gradle version ($GRADLE_VERSION) does not match git tag ($TAG_VERSION)"
          exit 1
        fi
        echo "âœ… Version consistency validated"

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
